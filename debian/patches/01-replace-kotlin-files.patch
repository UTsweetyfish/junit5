Description: Build without Kotlin
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: not-needed
--- a/settings.gradle.kts
+++ /dev/null
@@ -1,40 +0,0 @@
-// Require Java 10 or higher
-val javaVersion = JavaVersion.current()
-require(javaVersion.isJava10Compatible) {
-	"The JUnit 5 build requires Java 10 or higher. Currently executing with Java ${javaVersion.majorVersion}."
-}
-
-rootProject.name = "junit5"
-
-include("documentation")
-include("junit-jupiter-api")
-include("junit-jupiter-engine")
-include("junit-jupiter-migrationsupport")
-include("junit-jupiter-params")
-include("junit-platform-commons")
-include("junit-platform-commons-java-9")
-include("junit-platform-console")
-include("junit-platform-console-standalone")
-include("junit-platform-engine")
-include("junit-platform-launcher")
-include("junit-platform-runner")
-include("junit-platform-suite-api")
-include("junit-platform-surefire-provider")
-include("junit-vintage-engine")
-include("platform-tests")
-include("platform-tooling-support-tests")
-include("junit-bom")
-
-// check that every subproject has a custom build file
-// based on the project name
-rootProject.children.forEach { project ->
-	project.buildFileName = "${project.name}.gradle"
-	if (!project.buildFile.isFile) {
-		project.buildFileName = "${project.name}.gradle.kts"
-	}
-	require(project.buildFile.isFile) {
-		"${project.buildFile} must exist"
-	}
-}
-
-enableFeaturePreview("STABLE_PUBLISHING")
--- /dev/null
+++ b/settings.gradle
@@ -0,0 +1,38 @@
+// Require Java 10 or higher
+def javaVersion = JavaVersion.current()
+if (!javaVersion.isJava10Compatible()) {
+	throw new IllegalArgumentException("The JUnit 5 build requires Java 10 or higher. Currently executing with Java ${javaVersion.majorVersion}.")
+}
+
+rootProject.name = "junit5"
+
+include("documentation")
+include("junit-jupiter-api")
+include("junit-jupiter-engine")
+include("junit-jupiter-migrationsupport")
+include("junit-jupiter-params")
+include("junit-platform-commons")
+include("junit-platform-commons-java-9")
+include("junit-platform-console")
+include("junit-platform-console-standalone")
+include("junit-platform-engine")
+include("junit-platform-launcher")
+include("junit-platform-runner")
+include("junit-platform-suite-api")
+include("junit-platform-surefire-provider")
+include("junit-vintage-engine")
+include("platform-tests")
+include("platform-tooling-support-tests")
+include("junit-bom")
+
+// check that every subproject has a custom build file
+// based on the project name
+rootProject.children.forEach { project ->
+	project.buildFileName = "${project.name}.gradle"
+	if (!project.buildFile.isFile()) {
+		project.buildFileName = "${project.name}.gradle.kts"
+	}
+	if (!project.buildFile.isFile()) {
+		throw new IllegalArgumentException("${project.buildFile} must exist")
+	}
+}
--- a/build.gradle
+++ b/build.gradle
@@ -16,7 +16,6 @@
 	id 'com.github.ben-manes.versions' version '0.20.0' apply false
 	id 'com.diffplug.gradle.spotless' version '3.14.0' apply false
 	id 'org.ajoberstar.git-publish' version '1.0.1' apply false
-	id 'org.jetbrains.kotlin.jvm' version '1.2.61' apply false
 	id 'com.github.johnrengelman.shadow' version '2.0.4' apply false
 	id 'de.marcphilipp.nexus-publish' version '0.1.0' apply false
 }
@@ -100,7 +99,6 @@
 allprojects { subproj ->
 
 	apply plugin: 'java-library'
-	apply plugin: 'kotlin'
 	apply plugin: 'eclipse'
 	apply plugin: 'idea'
 	apply plugin: 'com.diffplug.gradle.spotless'
@@ -160,14 +158,6 @@
 		}
 	}
 
-	tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
-		kotlinOptions {
-			jvmTarget = '1.8'
-			apiVersion = '1.1'
-			languageVersion = '1.1'
-		}
-	}
-
 	checkstyle {
 		toolVersion = '8.10'
 		configDir = rootProject.file('src/checkstyle')
